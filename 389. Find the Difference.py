'''
Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.

Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
'''

#自己想的, bit manipulation, time complexity O(len(s)+len(t)), 52ms
#思路: 把letter 轉化成數字, 再利用 ^= 來消除重複num, 再把num轉化成letter
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        nums_s, nums_t = 0, 0
        for w in s:
            nums_s ^= ord(w)
        for w in t:
            nums_t ^= ord(w)
        return chr(nums_t ^ nums_s)



# 60ms
class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        dict_s = {}
        dict_t = {}
        for i in s:
            dict_s[i] = dict_s.get(i,0) + 1
        for i in t:
            dict_t[i] = dict_t.get(i,0) + 1
        for i in t:
            if dict_t.get(i,0) != dict_s.get(i,0):
                return i



class Solution(object):
    """
    difference
    """
    def findTheDifference(self, s, t):
        diff = 0
        for i in range(len(s)):
            diff -= ord(s[i])
            diff += ord(t[i])
        diff += ord(t[-1])
        return chr(diff)

# 76ms
class Solution(object):
    """
    xor
    """
    def findTheDifference(self, s, t):
        code = 0
        for ch in s + t:
            code ^= ord(ch)
        return chr(code)

5^5
0



















